<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: auth/messages/logout_session.proto

namespace Barsam\Auth\Messages;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Define the request message
 *
 * Generated from protobuf message <code>barsam.auth.messages.LogoutSessionRequest</code>
 */
class LogoutSessionRequest extends \Google\Protobuf\Internal\Message
{
    protected $_;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $access_token
     *     @type int|string $session_id
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Auth\Messages\LogoutSession::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string access_token = 1;</code>
     * @return string
     */
    public function getAccessToken()
    {
        return $this->readOneof(1);
    }

    public function hasAccessToken()
    {
        return $this->hasOneof(1);
    }

    /**
     * Generated from protobuf field <code>string access_token = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setAccessToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint64 session_id = 2;</code>
     * @return int|string
     */
    public function getSessionId()
    {
        return $this->readOneof(2);
    }

    public function hasSessionId()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>uint64 session_id = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setSessionId($var)
    {
        GPBUtil::checkUint64($var);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function get()
    {
        return $this->whichOneof("_");
    }

}

