<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: auth/messages/issue_token.proto

namespace Barsam\Auth\Messages;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Define the request message
 *
 * Generated from protobuf message <code>barsam.auth.messages.IssueTokenRequest</code>
 */
class IssueTokenRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * The ID of the client
     *
     * Generated from protobuf field <code>string client_id = 1;</code>
     */
    protected $client_id = '';
    /**
     * The secret of the client
     *
     * Generated from protobuf field <code>string client_secret = 2;</code>
     */
    protected $client_secret = '';
    /**
     * The redirect URI of the client
     *
     * Generated from protobuf field <code>string redirect_uri = 3;</code>
     */
    protected $redirect_uri = '';
    /**
     * The grant type
     *
     * Generated from protobuf field <code>.barsam.auth.enums.GrantType grant_type = 4;</code>
     */
    protected $grant_type = 0;
    /**
     * The ID of the user to issue the token for
     *
     * Generated from protobuf field <code>uint64 user_id = 5;</code>
     */
    protected $user_id = 0;
    /**
     * The code to issue the token for (used if the grant_type is authorization_code)
     *
     * Generated from protobuf field <code>string code = 6;</code>
     */
    protected $code = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $client_id
     *           The ID of the client
     *     @type string $client_secret
     *           The secret of the client
     *     @type string $redirect_uri
     *           The redirect URI of the client
     *     @type int $grant_type
     *           The grant type
     *     @type int|string $user_id
     *           The ID of the user to issue the token for
     *     @type string $code
     *           The code to issue the token for (used if the grant_type is authorization_code)
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Auth\Messages\IssueToken::initOnce();
        parent::__construct($data);
    }

    /**
     * The ID of the client
     *
     * Generated from protobuf field <code>string client_id = 1;</code>
     * @return string
     */
    public function getClientId()
    {
        return $this->client_id;
    }

    /**
     * The ID of the client
     *
     * Generated from protobuf field <code>string client_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setClientId($var)
    {
        GPBUtil::checkString($var, True);
        $this->client_id = $var;

        return $this;
    }

    /**
     * The secret of the client
     *
     * Generated from protobuf field <code>string client_secret = 2;</code>
     * @return string
     */
    public function getClientSecret()
    {
        return $this->client_secret;
    }

    /**
     * The secret of the client
     *
     * Generated from protobuf field <code>string client_secret = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setClientSecret($var)
    {
        GPBUtil::checkString($var, True);
        $this->client_secret = $var;

        return $this;
    }

    /**
     * The redirect URI of the client
     *
     * Generated from protobuf field <code>string redirect_uri = 3;</code>
     * @return string
     */
    public function getRedirectUri()
    {
        return $this->redirect_uri;
    }

    /**
     * The redirect URI of the client
     *
     * Generated from protobuf field <code>string redirect_uri = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setRedirectUri($var)
    {
        GPBUtil::checkString($var, True);
        $this->redirect_uri = $var;

        return $this;
    }

    /**
     * The grant type
     *
     * Generated from protobuf field <code>.barsam.auth.enums.GrantType grant_type = 4;</code>
     * @return int
     */
    public function getGrantType()
    {
        return $this->grant_type;
    }

    /**
     * The grant type
     *
     * Generated from protobuf field <code>.barsam.auth.enums.GrantType grant_type = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setGrantType($var)
    {
        GPBUtil::checkEnum($var, \Barsam\Auth\Enums\GrantType::class);
        $this->grant_type = $var;

        return $this;
    }

    /**
     * The ID of the user to issue the token for
     *
     * Generated from protobuf field <code>uint64 user_id = 5;</code>
     * @return int|string
     */
    public function getUserId()
    {
        return $this->user_id;
    }

    /**
     * The ID of the user to issue the token for
     *
     * Generated from protobuf field <code>uint64 user_id = 5;</code>
     * @param int|string $var
     * @return $this
     */
    public function setUserId($var)
    {
        GPBUtil::checkUint64($var);
        $this->user_id = $var;

        return $this;
    }

    /**
     * The code to issue the token for (used if the grant_type is authorization_code)
     *
     * Generated from protobuf field <code>string code = 6;</code>
     * @return string
     */
    public function getCode()
    {
        return $this->code;
    }

    /**
     * The code to issue the token for (used if the grant_type is authorization_code)
     *
     * Generated from protobuf field <code>string code = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setCode($var)
    {
        GPBUtil::checkString($var, True);
        $this->code = $var;

        return $this;
    }

}

