stages:
  - generate
  - deploy

generate_php:
  stage: generate
  image: php:8.3
  script:
    - apt-get update && apt-get install -y protobuf-compiler
    - ./scripts/build.sh
  artifacts:
    paths:
      - generated/
  only:
    - main

deploy_generated_files:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host gitlab.dngs.ir\n  Port 3031" > ~/.ssh/config
    - chmod 600 ~/.ssh/config
    - ssh-keyscan -p 3031 -H gitlab.dngs.ir >> ~/.ssh/known_hosts
  script:
    - apk add --no-cache git jq curl
    - git config --global user.email "ci@dngs.ir"
    - git config --global user.name "CI Automatic Build"
    - git clone --depth 1 git@gitlab.dngs.ir:microservices/grpc-definition.git def-repo
    - cd def-repo
    - CURRENT_VERSION=$(jq -r '.version' composer.json)
    - git fetch
    - git tag "v$CURRENT_VERSION"
    - git push origin "v$CURRENT_VERSION"
    - 'curl --fail-with-body --header "Job-Token: ${CI_JOB_TOKEN}" --data tag=v${CURRENT_VERSION} "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/composer"'
    - cd ..
    - git clone --depth 1 $TARGET_REPO_URL target-repo
    - rm -rf target-repo/src/*
    - cp -r generated/* target-repo/src/
    - cd target-repo
    - CURRENT_VERSION=$(jq -r '.version' composer.json)
    - IFS='.'; set -- $CURRENT_VERSION
    - MAJOR=$1
    - MINOR=$2
    - PATCH=$3
    - NEW_VERSION="$MAJOR.$((MINOR + 1)).$PATCH"
    - jq --arg new_version "$NEW_VERSION" '.version = $new_version' composer.json > composer.tmp.json
    - mv composer.tmp.json composer.json
    - git add .
    - git commit -m "Update generated PHP files"
    - git tag "v$NEW_VERSION"
    - git push origin main
    - git push origin "v$NEW_VERSION"
  dependencies:
    - generate_php
  only:
    - main
